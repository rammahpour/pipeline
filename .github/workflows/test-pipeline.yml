name: Angular Build and Android APK Pipeline

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install ESLint dependencies
        run: |
          npm install --save-dev @angular-eslint/builder @angular-eslint/eslint-plugin @angular-eslint/eslint-plugin-template @angular-eslint/schematics @angular-eslint/template-parser
          npm install --save-dev @typescript-eslint/eslint-plugin @typescript-eslint/parser
          npm install --save-dev eslint eslint-plugin-import

      - name: Create auth.config.ts file
        run: |
          echo 'export const domain = "test-domain.auth0.com";' > src/app/auth.config.ts
          echo 'export const clientId = "test-client-id";' >> src/app/auth.config.ts
          echo 'export const appId = "com.auth0.samples";' >> src/app/auth.config.ts
          echo 'export const auth0Domain = "test-domain.auth0.com";' >> src/app/auth.config.ts
          echo 'const iosOrAndroid = false;' >> src/app/auth.config.ts
          echo 'export const callbackUri = iosOrAndroid ? `${appId}://${auth0Domain}/capacitor/${appId}/callback` : "http://localhost:4200";' >> src/app/auth.config.ts

      - name: Build Angular App
        run: npm run build -- --configuration production

      - name: Lint Angular App
        run: npm run lint || true  # Continue even if linting fails for now

      - name: Run Unit Tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      # Setup for Android build
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # Update Capacitor dependencies if needed
      - name: Update Capacitor
        run: npm install @capacitor/core @capacitor/cli

      # Conditionally add Android platform and sync web assets
      - name: Add Capacitor Android platform if needed and sync
        run: |
          if [ ! -d "android" ]; then
            npx cap add android
          else
            echo "Android platform already exists, skipping add step."
          fi
          npx cap sync android

      # Create a dummy google-services.json if needed
      - name: Create dummy google-services.json
        run: |
          echo '{
            "project_info": {
              "project_number": "123456789",
              "project_id": "dummy-project",
              "storage_bucket": "dummy-project.appspot.com"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "1:123456789:android:abcdef1234567890",
                  "android_client_info": {
                    "package_name": "com.auth0.samples"
                  }
                }
              }
            ]
          }' > android/app/google-services.json

      # Build the APK
      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleDebug

      # Upload APK as an artifact
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

      # Optional: Release to GitHub Releases
      - name: Create Release
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: android/app/build/outputs/apk/debug/app-debug.apk
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}