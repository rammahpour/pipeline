name: Angular Build, Android APK and iOS Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install ESLint dependencies
        run: |
          npm install --save-dev @angular-eslint/builder @angular-eslint/eslint-plugin @angular-eslint/eslint-plugin-template @angular-eslint/schematics @angular-eslint/template-parser
          npm install --save-dev @typescript-eslint/eslint-plugin @typescript-eslint/parser
          npm install --save-dev eslint eslint-plugin-import

      - name: Create auth.config.ts file
        run: |
          echo 'export const domain = "test-domain.auth0.com";' > src/app/auth.config.ts
          echo 'export const clientId = "test-client-id";' >> src/app/auth.config.ts
          echo 'export const appId = "com.auth0.samples";' >> src/app/auth.config.ts
          echo 'export const auth0Domain = "test-domain.auth0.com";' >> src/app/auth.config.ts
          echo 'const iosOrAndroid = false;' >> src/app/auth.config.ts
          echo 'export const callbackUri = iosOrAndroid ? `${appId}://${auth0Domain}/capacitor/${appId}/callback` : "http://localhost:4200";' >> src/app/auth.config.ts

      - name: Build Angular App
        run: npm run build -- --configuration production

      - name: Lint Angular App
        run: npm run lint || true

      - name: Run Unit Tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      # Setup for Android build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Update Capacitor
        run: npm install @capacitor/core @capacitor/cli

      - name: Add Capacitor Android platform if needed and sync
        run: |
          if [ ! -d "android" ]; then
            npx cap add android
          else
            echo "Android platform already exists, skipping add step."
          fi
          npx cap sync android

      - name: Create dummy google-services.json
        run: |
          cat <<EOF > android/app/google-services.json
          {
            "project_info": {
              "project_number": "123456789",
              "project_id": "dummy-project",
              "storage_bucket": "dummy-project.appspot.com"
            },
            "client": [{
              "client_info": {
                "mobilesdk_app_id": "1:123456789:android:abcdef1234567890",
                "android_client_info": {"package_name": "com.auth0.samples"}
              },
              "api_key": [{"current_key": "dummy-api-key"}]
            }],
            "configuration_version": "1"
          }
          EOF

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

      # iOS Build Steps
      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Add Capacitor iOS platform if needed and sync
        run: |
          if [ ! -d "ios" ]; then
            npx cap add ios
          else
            echo "iOS platform already exists, skipping add step."
          fi
          npx cap sync ios

      - name: Install iOS dependencies
        run: |
          cd ios/App
          pod install

      - name: Build iOS app
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -configuration Debug -sdk iphonesimulator -derivedDataPath build

      - name: Archive iOS build
        run: |
          cd ios/App/build/Build/Products/Debug-iphonesimulator
          zip -r App.zip App.app

      - name: Upload iOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/App/build/Build/Products/Debug-iphonesimulator/App.zip

      - name: Create Release
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            android/app/build/outputs/apk/debug/app-debug.apk
            ios/App/build/Build/Products/Debug-iphonesimulator/App.zip
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
